---

- name: "Update apt packages"
  ansible.builtin.apt:
    update_cache: yes
  tags:
    - apps.install.python

- name: "Upgrade"
  ansible.builtin.apt:
    upgrade: yes
  tags:
    - apps.install.python

- name: "Install required packages"
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop: "{{ required_packages }}"
  tags:
    - apps.install.python

- name: "Download Python tar package"
  get_url:
    url: "{{ python_download_urls[desired_python_version]['url'] }}"
    dest: "/opt/Python-{{ desired_python_version }}.tar.xz"
  tags:
    - apps.install.python

- name: Extract Python tar package
  ansible.builtin.unarchive:
    src: "/opt/Python-{{ desired_python_version }}.tar.xz"
    dest: "/opt"
    remote_src: yes
  tags:
    - apps.install.python

- name: "Run configuration script"
  ansible.builtin.command:
    cmd: "/opt/Python-{{ desired_python_version }}/configure"
    chdir: "/opt/Python-{{ desired_python_version }}"
  tags:
    - apps.install.python

- name: "Run make altinstall (Python installation)"
  ansible.builtin.command:
    cmd: "make altinstall"
    chdir: "/opt/Python-{{ desired_python_version }}"
  tags:
    - apps.install.python

- name: "Make the desired Python version default"
  ansible.builtin.command:
    cmd: "update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.11 1"
  tags:
    - apps.install.python

- name: "Python symlink creation"
  ansible.builtin.shell:
    cmd: "bash -c 'ln -sf /usr/bin/python3 /usr/bin/python'"
  tags:
    - apps.install.python

- name: "Check if alias exists"
  ansible.builtin.shell:
    cmd: "grep -q 'alias python='python3'' ~/.bashrc"
  register: alias_check
  ignore_errors: true
  tags:
    - apps.install.python

- name: "Add alias to shell profile"
  ansible.builtin.lineinfile:
    path: "~/.bashrc"
    line: "alias python='python3'"
    insertafter: EOF
  when: not alias_check.rc | default(0) == 0
  tags:
    - apps.install.python

- name: "Source the shell profile"
  ansible.builtin.shell: "bash -c 'source ~/.bashrc'"
  tags:
    - apps.install.python

- name: "Check if alias exists - devuser"
  become_user: devuser
  ansible.builtin.shell:
    cmd: "grep -q 'alias python='python3'' ~/.bashrc"
  register: alias_check_devuser
  ignore_errors: true
  tags:
    - apps.install.python

- name: "Add alias to shell profile - devuser"
  become_user: devuser
  ansible.builtin.lineinfile:
    path: "~/.bashrc"
    line: "alias python='python3'"
    insertafter: EOF
  when: not alias_check_devuser.rc | default(0) == 0
  tags:
    - apps.install.python

- name: "Source the shell profile - devuser"
  become_user: devuser
  ansible.builtin.shell: "bash -c 'source ~/.bashrc'"
  tags:
    - apps.install.python
